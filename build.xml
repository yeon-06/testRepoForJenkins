<?xml version="1.0"?>

<project name="testProject" default="main" basedir="." xmlns:sonar="antlib:org.sonar.ant">

	<!--compile 전에 실행하는 선행 작업들 -->
	<target name="init">
		<!--변수 선언 -->
		<property name="src" location="src" />
		<property name="bin" location="bin" />
		<property name="lib" location="WebContent/WEB-INF/lib" />
		<property name="war.name" location="testProject.war" />
		<property name="web" location="WebContent" />
		<!--<property name="javac.test.classpath" location="WebContent/WEB-INF/lib/junit-*.jar" />-->
		
		<!-- Define the SonarQube global properties (the most usual way is to pass these properties via the command line) -->
		<property name="sonar.host.url" value="http://localhost:9000" />
		 
		<!-- Define the SonarQube project properties -->
		<property name="sonar.projectKey" value="test" />
		<property name="sonar.projectName" value="test" />
		<property name="sonar.projectVersion" value="1.0" />
		<property name="sonar.sources" value="src" />
		<property name="sonar.java.binaries" value="bin" />
		<property name="sonar.java.libraries" value="WebContent/WEB-INF/lib/*.jar" />
		<property name="sonar.login" value="441497230decb58fc8c0c0c07eb87b45e247b17c" />
		<property name="sonar.scm.provider" value="git" />

		<!--bin 폴더가 없으면 생성 -->
		<mkdir dir="${bin}" />

		<!--Format 설정 -->
		<tstamp>
			<format property="DSTAMP" pattern="yyyyHHdd" />
			<format property="TSTAMP" pattern="HHmm" />
		</tstamp>
	</target>

	<!--javac를 이용해 java파일->class파일 -->
	<target name="compile" depends="init,sonar"> <!--depends: target 작업을 하기 전에 선행 되어야 함. init작업이 먼저 실행 되어야 함. -->
		<path id="lib.jar">
		    <fileset dir="WebContent/WEB-INF/lib" includes="*.jar" />
		</path>
		
		<!--src 폴더의 bin 폴더에 있는 클래스들 내려 받기 -->
		<javac srcdir="${src}" destdir="${bin}" includeantruntime="true" classpathref="lib.jar">
		</javac>
	</target>
	
	<!--리포트 생성-->
	<target name="junit4" depends="compile">
	    <path id="junit.jar">
		<fileset dir="WebContent/WEB-INF/lib" includes="junit-4.11.jar" />
	    </path>
	    <junit printsummary="on" fork="false" haltonfailure="false">
	      	<classpath refid="junit.jar"/>
	      	<formatter type="xml"/>
	      	<batchtest todir="report">
	        	<fileset dir="${src}/testProject">
	          		<include name="**/JUnit*.java"/>
	        	</fileset>
	      	</batchtest>
	    </junit>
	  
	    <mkdir dir="report" />
	    <junitreport todir="report">
	      	<fileset dir="report">
	        	<include name="TEST-*.xml"/>
	      	</fileset>
	      	<report format="frames" todir="report"/>
	    </junitreport>
	</target>
	
	<!--java코드 실행 -->
	<target name="main" depends="clean,war">
		<java classpath="${bin}" classname="testProject.HelloWorld">
		</java>
	</target>

	<!-- war 생성 -->
	<target name="war" depends="compile,junit4">
		<!--dist 폴더에 format한 ${DSTAMP}.war 로 생성 -->
		<war destfile="${bin}/${DSTAMP}.war" webxml="${web}/WEB-INF/web.xml">

			<!--${web} -> WebContent( property에 설정) 에 web.xml 제외한 나머지 모두 war로 생성 -->
			<fileset dir="${web}">
				<include name="**/*.*" />
				<exclude name="WEB-INF/web.xml" />
			</fileset>
		</war>
	</target>

	<target name="clean">
		<delete dir="${bin}" /> <!--폴더 삭제 -->
	</target>

	<!-- Define SonarScanner for Ant Target -->
	<target name="sonar">
	    <taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
	        <!-- Update the following line, or put the "sonarqube-ant-task-*.jar" file in your "$HOME/.ant/lib" folder -->
	        <classpath path="C:/Ant/apache-ant-1.9.15/lib/sonarqube-ant-task-*.jar" />
	    </taskdef>
	 
	    <!-- Execute SonarScanner for Ant Analysis -->
	    <sonar:sonar />
	</target>
</project>
